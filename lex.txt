--------------------------------------
LEX
--------------------------------------

LEX Program to check whether input character is vowel or consonants.

%{
#include <stdio.h>
%}

%%
[aeiouAEIOU]  printf("%c is a vowel\n",yytext[0]);   
[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ] printf("%c is a consonant\n",yytext[0]);
.   printf("%c is an invalid input\n");
%%

int yywrap(){
 return 1;
}
int main() { 
yylex();
return 0;
}

--------------------------------------
--------------------------------------

LEX Program to check whether the string is a word or a number or combination
of both.

%{
	void display(int flag);
%}

%%

[a-zA-Z]+ {
	int flag = 1;
	display(flag);
	return 0;
}

[0-9]+ {
	int flag = 0;
	display(flag);
	return 0;
}

.+ {
	int flag = -1;
	display(flag);
	return 0;
}

%%

#include <stdio.h>

void display(int flag) {
	if(flag == 1) {	
		printf("Word");
	}
	else if(flag == 0) {
		printf("Number");
	}
	else {
		printf("Special charcter");
	}	
}


int yywrap() {}

int main() {
	printf("Enter a character\n");
	yylex();
	return 0;
}

--------------------------------------
--------------------------------------

LEX Program to count the number of lines, words and characters in a text.

%{

// ctrl D for linux, ctrl Z for windows for end of Op

#include <string.h> 
#include <conio.h>
#include <stdio.h>

int lines = 0;
int words = 0;
int characters = 0;

%}

%%
\n      { lines++; }         
[a-zA-Z]+   { words++; characters += strlen(yytext); } 
.       { characters++; }   
%%

int yywrap() {}

int main() {
    yylex();
    printf("Lines: %d\n", lines);
    printf("Words: %d\n", words);
    printf("Characters: %d\n", characters);
    return 0;
}

--------------------------------------
--------------------------------------

LEX Program to implement Lexical Analyzer

%{

char *keywords[] = { "if", "else", "for", "while", "do", "int", "float", "char", "return" }; 

int isKeyword(char *word) {
    int n = sizeof(keywords) / sizeof(keywords[0]);
    for (int i=0; i<n; i++) {
        if (keywords[i] == word) {
           return 1; 
        }
    }
    return 0;
} 

%}

%%

[a-zA-Z][a-zA-Z0-9]* {
    if (isKeyword(yytext)) {
        printf("KEYWORD: %s\n", yytext);
    }
    else {
        printf("IDENTIFIER: %s\n", yytext);
    }
}

[0-9]+ printf("CONSTANT: %s\n", yytext);

\+|\=|\-|\*|\/ printf("OPERATOR: %s\n", yytext);

\(|\)|\{|;|,|\} printf("SEPARATOR: %s\n", yytext);

%%

#include <stdio.h>
#include <conio.h>
#include <string.h>

int yywrap() {}

int main() {
    yylex();
    return 0; 
} 

--------------------------------------
--------------------------------------

LEX Program to accept user name and print message “Hello <user name>”

%{
#include <stdio.h>
%}

%%
[^\n]+ { printf("Hello %s!\n", yytext); }
\n     { /* Ignore newline */ }
%%

int yywrap() {
 return 1;
}
int main(int argc, char *argv[]) {
printf("Enter your name: ");
yylex();
return 0;
}
